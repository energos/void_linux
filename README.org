#+TITLE: Energos's Anarchic Void Linux Notes Collection
#+OPTIONS: toc:nil num:nil html-postamble:nil
#+STARTUP: showall

* Install Void Linux
- [[https://voidlinux.org/download/][Download Void Linux]]
- [[https://docs.voidlinux.org/][Void Linux Handbook]]
- [[https://docs.voidlinux.org/installation/guides/fde.html][Full Disk Encryption - Void Linux Handbook]]
* USB UEFI with LUKS encryption
** Boot install media in EFI mode
- Test if efivars are available
#+begin_src bash
  ls /sys/firmware/efi/efivars
#+end_src
- Small conveniences
#+begin_src bash
  bind '"\e[A": history-search-backward'
  bind '"\e[B": history-search-forward'
#+end_src
** Create partitions
#+begin_src bash
  fdisk -l /dev/sdd
#+end_src
#+begin_example
Disk /dev/sdd: 57.28 GiB, 61505273856 bytes, 120127488 sectors
Disk model:  SanDisk 3.2Gen1
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: gpt
Disk identifier: 66D599E1-50CB-F342-8D2F-5AA51C1B9D0B

Device         Start       End   Sectors  Size Type
/dev/sdd1       2048    198655    196608   96M EFI System
/dev/sdd2     198656 117639167 117440512   56G Linux filesystem
/dev/sdd3  117639168 120125439   2486272  1.2G Microsoft basic data
#+end_example
** Encrypt root partition
#+begin_src bash
  cryptsetup luksFormat --type luks1 /dev/sdd2
  cryptsetup luksOpen /dev/sdd2 voidvm
#+end_src
** Create lvm volumes
#+begin_src bash
  vgcreate voidvm /dev/mapper/voidvm
  lvcreate --name swap -L 1G voidvm # optional
  lvcreate --name root -l 100%FREE voidvm
#+end_src
** Format Partitions
#+begin_src bash
  mkfs.vfat -n EFI /dev/sdd1
  mkfs.vfat -n DUMPSTER /dev/sdd3
  mkswap -L SWAP /dev/voidvm/swap
  mkfs.ext4 -O "^has_journal" -L WilburyRoot /dev/voidvm/root
#+end_src
*** Write down the UUIDs
#+begin_src bash
  lsblk /dev/sdd -f
#+end_src
#+begin_example
NAME              FSTYPE      FSVER    LABEL       UUID                                   FSAVAIL FSUSE% MOUNTPOINTS
sdd
├─sdd1            vfat        FAT16    EFI         EC04-95D9                                95.8M     0% /mnt/boot/efi
├─sdd2            crypto_LUKS 1                    3e307c1e-14cb-4361-93a5-ba28fa364c08
│ └─voidvm        LVM2_member LVM2 001             YNS9Ql-uJJy-aR2Y-pivu-jV5l-Vw9y-wJecNp
│   ├─voidvm-swap swap        1        SWAP        8c33051a-6a72-4139-a738-61e19d341a7e                  [SWAP]
│   └─voidvm-root ext4        1.0      WilburyRoot dccba26d-a410-4652-8b78-41992a8a6b65     49.8G     3% /mnt
└─sdd3            vfat        FAT32    DUMPSTER    EDD6-9199
#+end_example
#+begin_example
LABEL=SWAP,        UUID=8c33051a-6a72-4139-a738-61e19d341a7e
LABEL=WilburyRoot, UUID=dccba26d-a410-4652-8b78-41992a8a6b65
LABEL=EFI,         UUID=EC04-95D9
LABEL=DUMPSTER,    UUID=EDD6-9199
#+end_example
** Mount Partitions
#+begin_src bash
  mount /dev/voidvm/root /mnt
  mkdir -p /mnt/boot/efi
  mount /dev/sdd1 /mnt/boot/efi
  swapon /dev/voidvm/swap
#+end_src
** Copy the keys
#+begin_src bash
  mkdir -p /mnt/var/db/xbps/keys
  cp /var/db/xbps/keys/* /mnt/var/db/xbps/keys/
#+end_src
** Install base system
#+begin_src bash
  xbps-install -Sy -R https://repo-de.voidlinux.org/current -r /mnt base-system cryptsetup grub-x86_64-efi lvm2 zile tmux mc
#+end_src
** Enter the chroot
#+begin_src bash
  xchroot /mnt
  chown root:root /
  chmod 755 /
  passwd root
  echo wilbury > /etc/hostname
  echo -en "LANG=en_US.UTF-8\nLC_COLLATE=C\n" > /etc/locale.conf
  echo "en_US.UTF-8 UTF-8" >> /etc/default/libc-locales
  xbps-reconfigure -f glibc-locales
#+end_src
** Edit /etc/fstab
#+begin_example
#
# See fstab(5).
#
# <file system>      <dir>     <type>  <options>               <dump> <pass>
tmpfs                /tmp      tmpfs   defaults,nosuid,nodev   0      0

/dev/voidvm/root     /         ext4    defaults,noatime,shared 0      1

/dev/voidvm/swap     swap      swap    defaults                0      0

UUID=EC04-95D9       /boot/efi vfat    defaults                0      2

#+end_example
** GRUB configuration
#+begin_src bash
  blkid -o value -s UUID /dev/sdd2
#+end_src
#+begin_example
3e307c1e-14cb-4361-93a5-ba28fa364c08
#+end_example
*** /etc/default/grub
#+begin_example
GRUB_ENABLE_CRYPTODISK=y
GRUB_CMDLINE_LINUX_DEFAULT="loglevel=4 rd.lvm.vg=voidvm rd.luks.uuid=3e307c1e-14cb-4361-93a5-ba28fa364c08"
#+end_example
** LUKS key
#+begin_src bash
  dd bs=1 count=64 if=/dev/urandom of=/boot/volume.key
  cryptsetup luksAddKey /dev/sdd2 /boot/volume.key
  chmod 000 /boot/volume.key
  chmod -R g-rwx,o-rwx /boot
#+end_src
*** /etc/crypttab
#+begin_example
voidvm   UUID=3e307c1e-14cb-4361-93a5-ba28fa364c08  /boot/volume.key  luks
#+end_example
*** /etc/dracut.conf.d/10-crypt.conf
#+begin_example
install_items+=" /boot/volume.key /etc/crypttab "
#+end_example
** Install boot loader
#+begin_src bash
  grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id="Void" --removable /dev/sdd
  xbps-reconfigure -fa
#+end_src
** Here we goooo
#+begin_src bash
  exit
  umount -R /mnt
  reboot
#+end_src
* Configure your brand new Void Linux installation
** Add an admin user
#+begin_src bash
  useradd -m -s /bin/bash -U -G wheel lefty
  passwd lefty
#+end_src
** Enable networking and ssh server
#+begin_src bash
  ln -s /etc/sv/dhcpcd /var/service
  ln -s /etc/sv/sshd /var/service
#+end_src
** Update system and add non free repository
#+begin_src bash
  xbps-install -Su
  xbps-install void-repo-nonfree
  xbps-install -S
#+end_src
** Change to a faster repository
*** /etc/xbps.d/00-repository-main.conf
#+begin_example
# repository=https://repo-default.voidlinux.org/current
repository=https://repo-de.voidlinux.org/current
#+end_example
*** /etc/xbps.d/10-repository-nonfree.conf
#+begin_example
# repository=https://repo-default.voidlinux.org/current/nonfree
repository=https://repo-de.voidlinux.org/current/nonfree
#+end_example
*** Update database
#+begin_src bash
  xbps-install -S
#+end_src
** Console font and keymap
Edit /etc/rc.conf
#+begin_example
KEYMAP=us-acentos
FONT="ter-118b"
#+end_example
** Timezone
#+begin_src bash
  ln -s /usr/share/zoneinfo/Brazil/East /etc/localtime
#+end_src
** LTS kernel
Edit /etc/xbps.d/20-kernel_lts.conf
#+begin_example
ignorepkg=linux
ignorepkg=linux-headers
#+end_example
#+begin_src bash
  xbps-install linux-lts linux-lts-headers
  xbps-remove linux linux-headers
  update-grub
#+end_src
** Do not install helvetica fonts
Otherwise you'll get very ugly fonts in Firefox.

Edit /etc/xbps.d/99-helvetica.conf
#+begin_example
ignorepkg=font-adobe-100dpi
ignorepkg=font-adobe-75dpi
ignorepkg=font-adobe-utopia-100dpi
ignorepkg=font-adobe-utopia-75dpi
ignorepkg=font-adobe-utopia-type1
#+end_example
#+begin_src bash
  xbps-remove font-adobe-100dpi font-adobe-75dpi font-adobe-utopia-100dpi font-adobe-utopia-75dpi font-adobe-utopia-type1
#+end_src
** Install the whole enchilada
#+begin_src bash
  xbps-install $(cat ~/packages.txt)
#+end_src
** Services
#+begin_src bash
  # ln -s /etc/sv/sshd /var/service
  ln -s /etc/sv/acpid /var/service
  ln -s /etc/sv/dbus /var/service
  ln -s /etc/sv/nanoklogd /var/service
  ln -s /etc/sv/polkitd /var/service
  ln -s /etc/sv/socklog-unix /var/service
#+end_src
** Release user's full power
#+begin_src bash
  usermod -a -G wheel,users,audio,video,cdrom,input,dialout,kvm,plugdev,xbuilder,network,socklog lefty
#+end_src
* dotfiles, dotfiles, dotfiles
** ssh keys
- ~/.ssh/config
- ~/.ssh/github_rsa
- ~/.ssh/github_rsa.pub
** Clone dotfiles repository
#+begin_src bash
  git clone git@github.com:energos/dotfiles
#+end_src
** copy /root dotfiles
#+begin_src bash
  su -
  cp /home/lefty/Work/dotfiles/environment/root/bash_profile /root/.bash_profile
  cp /home/lefty/Work/dotfiles/environment/root/bashrc /root/.bashrc
  cp /home/lefty/Work/dotfiles/environment/root/inputrc /root/.inputrc
  exit
#+end_src
** dotfiles symlinks galore
#+begin_src bash
  cd ~
  ln -s Work/dotfiles/environment/Xresources .Xresources
  mv .bash_profile .bash_profile.original
  ln -s Work/dotfiles/environment/bash_profile .bash_profile
  mv .bashrc .bashrc.original
  ln -s Work/dotfiles/environment/bashrc .bashrc
  ln -s Work/dotfiles/gitconfig .gitconfig
  ln -s Work/dotfiles/.gitignore .gitignore
  ln -s Work/dotfiles/gmrun/gmrunrc .gmrunrc
  mv .inputrc .inputrc.original
  ln -s Work/dotfiles/environment/inputrc .inputrc
  ln -s Work/dotfiles/tmux/tmux.conf .tmux.conf
  ln -s Work/dotfiles/environment/xbindkeysrc .xbindkeysrc
  ln -s Work/dotfiles/environment/xinitrc .xinitrc
  mkdir bin
  ln -s ../Work/dotfiles/bin/bukumarks bin/bukumarks
  ln -s ../Work/dotfiles/bin/emacs-git bin/emacs-git
  ln -s ../Work/dotfiles/bin/emacs-nox bin/emacs-nox
  ln -s ../Work/dotfiles/bin/hello-fortune bin/hello-fortune
  ln -s ../Work/dotfiles/bin/nohup-open bin/nohup-open
  ln -s ../Work/dotfiles/bin/pqp bin/pqp
  ln -s ../Work/dotfiles/bin/urxvtcd bin/urxvtcd
  mkdir .config/dunst
  ln -s ../../Work/dotfiles/dunst/dunstrc .config/dunst/dunstrc
  mkdir .config/mpv
  ln -s ../../Work/dotfiles/mpv/input.conf .config/mpv/input.conf
  ln -s ../../Work/dotfiles/mpv/mpv.conf .config/mpv/mpv.conf
  mkdir .config/obmenu-generator
  ln -s ../../Work/dotfiles/obmenu-generator/config.pl .config/obmenu-generator/config.pl
  ln -s ../../Work/dotfiles/obmenu-generator/schema.pl .config/obmenu-generator/schema.pl
  mkdir .config/openbox
  ln -s ../../Work/dotfiles/openbox/autostart .config/openbox/autostart
  ln -s ../../Work/dotfiles/openbox/environment .config/openbox/environment
  ln -s ../../Work/dotfiles/openbox/menu.xml .config/openbox/menu.xml
  ln -s ../../Work/dotfiles/openbox/menu_books.sh .config/openbox/menu_books.sh
  ln -s ../../Work/dotfiles/openbox/menu_browsers.sh .config/openbox/menu_browsers.sh
  ln -s ../../Work/dotfiles/openbox/menu_electronics.sh .config/openbox/menu_electronics.sh
  ln -s ../../Work/dotfiles/openbox/menu_multimedia.sh .config/openbox/menu_multimedia.sh
  ln -s ../../Work/dotfiles/openbox/menu_root.sh .config/openbox/menu_root.sh
  ln -s ../../Work/dotfiles/openbox/menu_virtualization.sh .config/openbox/menu_virtualization.sh
  ln -s ../../Work/dotfiles/openbox/rc.xml .config/openbox/rc.xml
  ln -s ../Work/dotfiles/picom/picom.vmguest.conf .config/picom.conf
  mkdir .config/rofi
  ln -s ../../Work/dotfiles/rofi/config.rasi .config/rofi/config.rasi
  mkdir .config/tint2
  ln -s ../../Work/dotfiles/tint2/tint2rc .config/tint2/tint2rc
  ln -s ../../Work/dotfiles/tint2/web-browser.desktop .config/tint2/web-browser.desktop
  mkdir .config/youtube-dl
  ln -s ../../Work/dotfiles/yt-dlp/config .config/youtube-dl/config
  ln -s ../Work/dotfiles/baloo/baloofilerc .config/baloofilerc
  mkdir .config/gtk-3.0
  mkdir .config/qt5ct
  ln -s ../../Work/dotfiles/appearance/gtk-3.0/gtk.css .config/gtk-3.0/gtk.css
  cp Work/dotfiles/appearance/gtkrc-2.0 .gtkrc-2.0
  cp Work/dotfiles/appearance/gtk-3.0/settings.ini .config/gtk-3.0/settings.ini
  cp Work/dotfiles/appearance/qt5ct/qt5ct.conf .config/qt5ct/qt5ct.conf
  cd $YOUR_FIREFOX_PROFILE
  ln -s ../../../Work/dotfiles/mozilla/user.js user.js
  mkdir chrome
  ln -s ../../../../Work/dotfiles/mozilla/disable_proton.css chrome/disable_proton.css
  ln -s ../../../../Work/dotfiles/mozilla/tabs_on_bottom.css chrome/tabs_on_bottom.css
  ln -s ../../../../Work/dotfiles/mozilla/userChrome.css chrome/userChrome.css
  ln -s ../../../../Work/dotfiles/mozilla/userContent.css chrome/userContent.css
  cd ~
  mkdir -p .config/pipewire/pipewire.conf.d
  ln -s ../../../Work/dotfiles/pipewire/pipewire.conf.d/11-beep.conf .config/pipewire/pipewire.conf.d/11-beep.conf
  mkdir -p .local/share/icons
  for i in Work/dotfiles/icons/*; do ln -s ../../../$i .local/share/icons/$(basename $i); done
  mkdir -p .local/share/applications
#+end_src
* TODO TODO
** Add to git repo
- packages.txt
- /etc/rc.conf
- /etc/xbps.d/*
  + 00-repository-main.conf
  + 10-repository-nonfree.conf
  + 20-kernel_lts.conf
  + 99-helvetica.conf
